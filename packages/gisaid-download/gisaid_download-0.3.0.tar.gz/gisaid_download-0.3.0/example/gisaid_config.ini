## Config file for downloading gisaid samples

# NOTE: do not add quotes around individual items

[SSH]
site = hpc.uncc.edu
group = 1837
# another file where your username and password are stored (default: ~/.pooPatrol/hpc_config.txt)
login_config = ~/fake-file.txt
# If True, credentials will be saved in `login_config`. If False, they will be requested every time
save_credentials = False

[Paths]
epicov_dir = /mnt/c/Users/samku/Documents/PooPatrol/epicov_data_test
    # local directory to store downloaded files
cluster_epicov_dir = /users/skunklem/epicov_data_test
    # hpc directory to store downloaded files
downloads = 
    # If not provided, script will expect to find downloads in a directory like /random/path/Downloads

[Misc]
; followup_command = "sbatch /projects/enviro_lab/scripts/reports/prepare_pdf_report.sh -s -r <date>"
followup_command = echo 'Running the followup command...'
    # If provided, this script (or command) will be run after uploading files to the hpc.
    # The string '<date>' will be replaced with the argument `date` passed in at run-time. 
    # `date` determines the output filename and can presumably be a destinguishing 
    #     characteristic for further pipeline analyses to locate the correct info.

## listed variables below (sep="," & whitespace is stripped)
; filetypes = fasta, meta
filetypes = date_loc, seq_tech
# options:
    # fasta: get sequences
    # meta: get CSVs (gets all three of the CSV files listed below)
    # * want to select individual CSVs?
    # * use the abbreviations these options instead:
    #   * date_loc: Dates and Location
    #   * patient: Patient status metadata
    #   * seq_tech: Sequencing technology metadata
    # ackno: get acknowledgement files
    # all: all all three (fasta,meta,ackno)
location = NC, SC
    # use any 2-letter state code (or full name of location of interest)
    # this impacts filenames
    # multiple states means multiple rounds of downloads

# If provided, this lets you customize your filter selections.
# Make sure each action is on a new line.
# The three allowed actions are click, fill, and print, and they will be executed as python functions
# In all three, you have access to the variable `date`
# * click(): for clicking a button/checkbox/whatever else
#   * arg1: item_to_click (its name)
#   * arg2 (optional): item_type (default: 'button')
# * fill(): for filling in a textbox
#   * arg1: item_to_fill (its name)
#   * arg2: content (how to fill it)
# * print(): for printing out a message (this is the standard python function)
# Alternatively, whatever else you add will be printed out, as written
; custom_filters = click("Complete","checkbox")
;                  click("Virus name","field")
;                  fill("Host","Canis lupus")
;                  print(f"Do this and that and set some date as {date}")
;                  Do that and this.
                 