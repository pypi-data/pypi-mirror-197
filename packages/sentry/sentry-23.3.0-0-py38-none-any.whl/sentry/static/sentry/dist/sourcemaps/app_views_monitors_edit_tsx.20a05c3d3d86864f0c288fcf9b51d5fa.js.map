{"version":3,"file":"chunks/app_views_monitors_edit_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"gWAMe,MAAMA,UAGXC,EAAAA,EACRC,WACE,MAAO,EACT,CAEAC,SACE,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAmB,CAACC,MAAOC,KAAKL,WAAWM,SACzCD,KAAKE,mBAGZ,EAdmBT,EAASU,YAAA,W,+mBCgB9B,MAAMC,UAAoBX,EAAAA,EAAwBY,cAAA,SAAAC,YAAAC,EAAAA,EAAAA,GAAA,iBAYpCC,GACVR,KAAKS,UAASC,IAAS,CAAEC,QAAS,IAAID,EAAMC,WAAYH,UAAQD,EAAAA,EAAAA,GAAA,wBAE/CC,GACjBI,EAAAA,eAAAA,MACEC,EAAAA,EAAAA,GAAc,kBAAiBb,KAAKc,iBAAiBN,EAAKO,WAC3D,CAjBCD,cACF,OAAOd,KAAKgB,MAAMC,aAAaF,IACjC,CAEAG,eACE,MAAM,OAACC,GAAUnB,KAAKgB,MACtB,MAAO,CACL,CAAC,UAAY,kBAAiBhB,KAAKc,oBAAoBK,EAAOC,gBAElE,CAUAzB,WACE,OAAIK,KAAKU,MAAMC,QACL,GAAEX,KAAKU,MAAMC,QAAQU,kBAAkBrB,KAAKc,UAE9C,WAAUd,KAAKc,SACzB,CAEAQ,aACE,MAAM,QAACX,GAAWX,KAAKU,MAEvB,OAAgB,OAAZC,EACK,MAIPY,EAAAA,EAAAA,IAACC,EAAAA,GAAW,CAAAvB,SAAA,EACVJ,EAAAA,EAAAA,IAAC2B,EAAAA,GAAa,CAAAvB,UACZsB,EAAAA,EAAAA,IAACC,EAAAA,GAAoB,CAAAvB,SAAA,EACnBJ,EAAAA,EAAAA,IAAC4B,EAAAA,EAAW,CACVC,OAAQ,CACN,CACEC,OAAOC,EAAAA,EAAAA,GAAE,SACTC,GAAK,kBAAiB7B,KAAKc,kBAE7B,CACEa,OAAOC,EAAAA,EAAAA,GAAE,aAAcjB,EAAQU,WAIrCxB,EAAAA,EAAAA,IAAC2B,EAAAA,GAAY,CAAAvB,UAAE2B,EAAAA,EAAAA,GAAE,wBAGrB/B,EAAAA,EAAAA,IAAC2B,EAAAA,GAAW,CAAAvB,UACVJ,EAAAA,EAAAA,IAAC2B,EAAAA,GAAW,CAACM,WAAS,EAAA7B,UACpBJ,EAAAA,EAAAA,IAACkC,EAAAA,EAAW,CACVpB,QAASA,EACTqB,UAAU,MACVC,YAAc,kBAAiBjC,KAAKc,oBAAoBH,EAAQI,QAChEmB,gBAAiBlC,KAAKkC,wBAMlC,EAGF,SAAeC,EAAAA,EAAAA,GAAiB/B,E","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/monitors/edit.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {browserHistory, RouteComponentProps} from 'react-router';\n\nimport Breadcrumbs from 'sentry/components/breadcrumbs';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport MonitorForm from './components/monitorForm';\nimport {Monitor} from './types';\n\ntype Props = AsyncView['props'] &\n  RouteComponentProps<{monitorSlug: string}, {}> & {\n    organization: Organization;\n  };\n\ntype State = AsyncView['state'] & {\n  monitor: Monitor | null;\n};\n\nclass EditMonitor extends AsyncView<Props, State> {\n  get orgSlug() {\n    return this.props.organization.slug;\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params} = this.props;\n    return [\n      ['monitor', `/organizations/${this.orgSlug}/monitors/${params.monitorSlug}/`],\n    ];\n  }\n\n  onUpdate = (data: Monitor) =>\n    this.setState(state => ({monitor: {...state.monitor, ...data}}));\n\n  onSubmitSuccess = (data: Monitor) =>\n    browserHistory.push(\n      normalizeUrl(`/organizations/${this.orgSlug}/crons/${data.slug}/`)\n    );\n\n  getTitle() {\n    if (this.state.monitor) {\n      return `${this.state.monitor.name} - Crons - ${this.orgSlug}`;\n    }\n    return `Crons - ${this.orgSlug}`;\n  }\n\n  renderBody() {\n    const {monitor} = this.state;\n\n    if (monitor === null) {\n      return null;\n    }\n\n    return (\n      <Layout.Page>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <Breadcrumbs\n              crumbs={[\n                {\n                  label: t('Crons'),\n                  to: `/organizations/${this.orgSlug}/crons/`,\n                },\n                {\n                  label: t('Editing %s', monitor.name),\n                },\n              ]}\n            />\n            <Layout.Title>{t('Edit Monitor')}</Layout.Title>\n          </Layout.HeaderContent>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <MonitorForm\n              monitor={monitor}\n              apiMethod=\"PUT\"\n              apiEndpoint={`/organizations/${this.orgSlug}/monitors/${monitor.slug}/`}\n              onSubmitSuccess={this.onSubmitSuccess}\n            />\n          </Layout.Main>\n        </Layout.Body>\n      </Layout.Page>\n    );\n  }\n}\n\nexport default withOrganization(EditMonitor);\n"],"names":["AsyncView","AsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","EditMonitor","constructor","arguments","_defineProperty","data","setState","state","monitor","browserHistory","normalizeUrl","orgSlug","slug","props","organization","getEndpoints","params","monitorSlug","name","renderBody","_jsxs","Layout","Breadcrumbs","crumbs","label","t","to","fullWidth","MonitorForm","apiMethod","apiEndpoint","onSubmitSuccess","withOrganization"],"sourceRoot":""}