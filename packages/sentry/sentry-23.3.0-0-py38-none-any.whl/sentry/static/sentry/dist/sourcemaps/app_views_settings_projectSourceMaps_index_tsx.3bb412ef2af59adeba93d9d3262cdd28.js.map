{"version":3,"file":"chunks/app_views_settings_projectSourceMaps_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/projectSourceMaps/list/sourceMapsArchiveRow.tsx","webpack:///./app/views/settings/projectSourceMaps/list/index.tsx","webpack:///./app/views/settings/projectSourceMaps/projectSourceMaps.tsx","webpack:///./app/views/settings/projectSourceMaps/index.tsx"],"sourcesContent":["import {Link as RouterLink} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport * as qs from 'query-string';\n\nimport useRouter from 'sentry/utils/useRouter';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = LinkProps & {\n  /**\n   * Link target. We don't want to expose the ToLocationFunction on this component.\n   */\n  to: LocationDescriptor;\n  /**\n   * The class to apply when the link is 'active'\n   */\n  activeClassName?: string;\n  disabled?: boolean;\n  index?: boolean;\n  /**\n   * Should be should be supplied by the parent component\n   */\n  isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n  query?: string;\n};\n\nfunction ListLink({\n  children,\n  className,\n  isActive,\n  query,\n  to,\n  activeClassName = 'active',\n  index = false,\n  disabled = false,\n  ...props\n}: Props) {\n  const router = useRouter();\n  const queryData = query ? qs.parse(query) : undefined;\n  const targetLocation = typeof to === 'string' ? {pathname: to, query: queryData} : to;\n  const target = normalizeUrl(targetLocation);\n\n  const active = isActive?.(target, index) ?? router.isActive(target, index);\n\n  return (\n    <StyledLi\n      className={classNames({[activeClassName]: active}, className)}\n      disabled={disabled}\n    >\n      <RouterLink {...props} onlyActiveOnIndex={index} to={disabled ? '' : target}>\n        {children}\n      </RouterLink>\n    </StyledLi>\n  );\n}\n\nexport default ListLink;\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {InputGroup, InputProps} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputGroup.LeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputGroup.LeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputGroup.TrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputGroup.TrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(InputGroup.Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport Count from 'sentry/components/count';\nimport DateTime from 'sentry/components/dateTime';\nimport Link from 'sentry/components/links/link';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport Version from 'sentry/components/version';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {SourceMapsArchive} from 'sentry/types';\n\ntype Props = {\n  archive: SourceMapsArchive;\n  onDelete: (name: string) => void;\n  orgId: string;\n  projectId: string;\n};\n\nconst SourceMapsArchiveRow = ({archive, orgId, projectId, onDelete}: Props) => {\n  const {name, date, fileCount} = archive;\n  const archiveLink = `/settings/${orgId}/projects/${projectId}/source-maps/${encodeURIComponent(\n    name\n  )}`;\n  return (\n    <Fragment>\n      <Column>\n        <TextOverflow>\n          <Link to={archiveLink}>\n            <Version version={name} anchor={false} tooltipRawVersion truncate />\n          </Link>\n        </TextOverflow>\n      </Column>\n      <ArtifactsColumn>\n        <Count value={fileCount} />\n      </ArtifactsColumn>\n      <Column>{t('release')}</Column>\n      <Column>\n        <DateTime date={date} />\n      </Column>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete artifacts.')}\n              >\n                <Confirm\n                  onConfirm={() => onDelete(name)}\n                  message={t(\n                    'Are you sure you want to remove all artifacts in this archive?'\n                  )}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"sm\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={t('Remove All Artifacts')}\n                    aria-label={t('Remove All Artifacts')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </Fragment>\n  );\n};\n\nconst Column = styled('div')`\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n`;\n\nconst ArtifactsColumn = styled(Column)`\n  padding-right: ${space(4)};\n  text-align: right;\n  justify-content: flex-end;\n`;\n\nconst ActionsColumn = styled(Column)`\n  justify-content: flex-end;\n`;\n\nexport default SourceMapsArchiveRow;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport SearchBar from 'sentry/components/searchBar';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project, SourceMapsArchive} from 'sentry/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport SourceMapsArchiveRow from './sourceMapsArchiveRow';\n\ntype Props = RouteComponentProps<{projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  archives: SourceMapsArchive[];\n};\n\nclass ProjectSourceMaps extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n\n    return routeTitleGen(t('Source Maps'), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      archives: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['archives', this.getArchivesUrl(), {query: {query: this.getQuery()}}]];\n  }\n\n  getArchivesUrl() {\n    const {organization, project} = this.props;\n\n    return `/projects/${organization.slug}/${project.slug}/files/source-maps/`;\n  }\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  handleDelete = async (name: string) => {\n    addLoadingMessage(t('Removing artifacts\\u2026'));\n    try {\n      await this.api.requestPromise(this.getArchivesUrl(), {\n        method: 'DELETE',\n        query: {name},\n      });\n      this.fetchData();\n      addSuccessMessage(t('Artifacts removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifacts. Please try again.'));\n    }\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return decodeScalar(query);\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no archives that match your search.');\n    }\n\n    return t('There are no archives for this project.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderArchives() {\n    const {archives} = this.state;\n    if (!archives.length) {\n      return null;\n    }\n    const {organization, project} = this.props;\n\n    return archives.map(a => {\n      return (\n        <SourceMapsArchiveRow\n          key={a.name}\n          archive={a}\n          orgId={organization.slug}\n          projectId={project.slug}\n          onDelete={this.handleDelete}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, archives, archivesPageLinks} = this.state;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('Source Maps')}\n          action={\n            <SearchBar\n              placeholder={t('Filter Archives')}\n              onSearch={this.handleSearch}\n              query={this.getQuery()}\n              width=\"280px\"\n            />\n          }\n        />\n\n        <TextBlock>\n          {tct(\n            `These source map archives help Sentry identify where to look when Javascript is minified. By providing this information, you can get better context for your stack traces when debugging. To learn more about source maps, [link: read the docs].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/sourcemaps/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <StyledPanelTable\n          headers={[\n            t('Archive'),\n            <ArtifactsColumn key=\"artifacts\">{t('Artifacts')}</ArtifactsColumn>,\n            t('Type'),\n            t('Date Created'),\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={archives.length === 0}\n          isLoading={loading}\n        >\n          {this.renderArchives()}\n        </StyledPanelTable>\n        <Pagination pageLinks={archivesPageLinks} />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns:\n    minmax(120px, 1fr) max-content minmax(85px, max-content) minmax(265px, max-content)\n    75px;\n`;\n\nconst ArtifactsColumn = styled('div')`\n  text-align: right;\n  padding-right: ${space(1.5)};\n  margin-right: ${space(0.25)};\n`;\n\nexport default ProjectSourceMaps;\n","import {Fragment, useCallback} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport Access from 'sentry/components/acl/access';\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport Count from 'sentry/components/count';\nimport DateTime from 'sentry/components/dateTime';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport ListLink from 'sentry/components/links/listLink';\nimport NavTabs from 'sentry/components/navTabs';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport SearchBar from 'sentry/components/searchBar';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport Version from 'sentry/components/version';\nimport {IconArrow, IconDelete} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\nimport {useQuery} from 'sentry/utils/queryClient';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nenum SORT_BY {\n  ASC = 'date_added',\n  DESC = '-date_added',\n}\n\ntype Props = RouteComponentProps<{}, {}> & {\n  project: Project;\n};\n\nexport function ProjectSourceMaps({routes, params, location, router, project}: Props) {\n  const api = useApi();\n  const organization = useOrganization();\n  const baseUrl = recreateRoute('', {routes, params, stepBack: -1});\n  const tabDebugIdBundlesActive = location.pathname.endsWith('debug-id-bundles/');\n  const query = decodeScalar(location.query.query);\n  const sortBy = location.query.sort ?? SORT_BY.DESC;\n  const cursor = location.query.cursor ?? '';\n  const sourceMapsEndpoint = `/projects/${organization.slug}/${project.slug}/files/source-maps/`;\n  const debugIdBundlesEndpoint = `/projects/${organization.slug}/${project.slug}/files/artifact-bundles/`;\n\n  const {\n    data: archivesData,\n    isLoading: archivesLoading,\n    refetch: archivesRefetch,\n  } = useQuery(\n    [\n      sourceMapsEndpoint,\n      {\n        query: {query, cursor, orderby: sortBy},\n      },\n    ],\n    () => {\n      return api.requestPromise(sourceMapsEndpoint, {\n        query: {query, cursor, orderby: sortBy},\n        includeAllArgs: true,\n      });\n    },\n    {\n      staleTime: 0,\n      keepPreviousData: true,\n      enabled: !tabDebugIdBundlesActive,\n    }\n  );\n\n  const {\n    data: debugIdBundlesData,\n    isLoading: debugIdBundlesLoading,\n    refetch: debugIdBundlesRefetch,\n  } = useQuery(\n    [\n      debugIdBundlesEndpoint,\n      {\n        query: {query, cursor, orderby: sortBy},\n      },\n    ],\n    () => {\n      return api.requestPromise(debugIdBundlesEndpoint, {\n        query: {query, cursor, orderby: sortBy},\n        includeAllArgs: true,\n      });\n    },\n    {\n      staleTime: 0,\n      keepPreviousData: true,\n      enabled: tabDebugIdBundlesActive,\n    }\n  );\n\n  const data = tabDebugIdBundlesActive\n    ? debugIdBundlesData?.[0] ?? []\n    : archivesData?.[0] ?? [];\n  const pageLinks = tabDebugIdBundlesActive\n    ? debugIdBundlesData?.[2]?.getResponseHeader('Link') ?? ''\n    : archivesData?.[2]?.getResponseHeader('Link') ?? '';\n  const loading = tabDebugIdBundlesActive ? debugIdBundlesLoading : archivesLoading;\n  const refetch = tabDebugIdBundlesActive ? debugIdBundlesRefetch : archivesRefetch;\n\n  const handleSearch = useCallback(\n    (newQuery: string) => {\n      router.push({\n        ...location,\n        query: {...location.query, cursor: undefined, query: newQuery},\n      });\n    },\n    [router, location]\n  );\n\n  const handleSortChange = useCallback(() => {\n    router.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        cursor: undefined,\n        sort: sortBy === SORT_BY.ASC ? SORT_BY.DESC : SORT_BY.ASC,\n      },\n    });\n  }, [location, router, sortBy]);\n\n  const handleDelete = useCallback(\n    async (name: string) => {\n      addLoadingMessage(t('Removing artifacts\\u2026'));\n      try {\n        await api.requestPromise(sourceMapsEndpoint, {\n          method: 'DELETE',\n          query: {name},\n        });\n        refetch();\n        addSuccessMessage(t('Artifacts removed.'));\n      } catch {\n        addErrorMessage(t('Unable to remove artifacts. Please try again.'));\n      }\n    },\n    [api, sourceMapsEndpoint, refetch]\n  );\n\n  return (\n    <Fragment>\n      <SettingsPageHeader title={t('Source Maps')} />\n      <TextBlock>\n        {tct(\n          `These source map archives help Sentry identify where to look when Javascript is minified. By providing this information, you can get better context for your stack traces when debugging. To learn more about source maps, [link: read the docs].`,\n          {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/sourcemaps/\" />\n            ),\n          }\n        )}\n      </TextBlock>\n      <NavTabs underlined>\n        <ListLink to={baseUrl} index isActive={() => !tabDebugIdBundlesActive}>\n          {t('Release Bundles')}\n        </ListLink>\n        <ListLink\n          to={`${baseUrl}debug-id-bundles/`}\n          index\n          isActive={() => tabDebugIdBundlesActive}\n        >\n          {t('Debug ID Bundles')}\n        </ListLink>\n      </NavTabs>\n      <SearchBarWithMarginBottom\n        placeholder={t('Search')}\n        onSearch={handleSearch}\n        query={query}\n      />\n      <StyledPanelTable\n        headers={[\n          t('Bundle'),\n          <ArtifactsColumn key=\"artifacts\">{t('Artifacts')}</ArtifactsColumn>,\n          <DateUploadedColumn key=\"date-uploaded\" onClick={handleSortChange}>\n            {t('Date Uploaded')}\n            <Tooltip\n              containerDisplayMode=\"inline-flex\"\n              title={\n                sortBy === SORT_BY.DESC\n                  ? t('Switch to ascending order')\n                  : t('Switch to descending order')\n              }\n            >\n              <IconArrow direction={sortBy === SORT_BY.DESC ? 'down' : 'up'} />\n            </Tooltip>\n          </DateUploadedColumn>,\n          '',\n        ]}\n        emptyMessage={\n          query\n            ? tct('No [tabName] match your search query.', {\n                tabName: tabDebugIdBundlesActive\n                  ? t('debug ID bundles')\n                  : t('release bundles'),\n              })\n            : tct('No [tabName] found for this project.', {\n                tabName: tabDebugIdBundlesActive\n                  ? t('debug ID bundles')\n                  : t('release bundles'),\n              })\n        }\n        isEmpty={data.length === 0}\n        isLoading={loading}\n      >\n        {data.map(({name, date, fileCount}) => {\n          return (\n            <Fragment key={name}>\n              <Column>\n                <TextOverflow>\n                  <Link\n                    to={`/settings/${organization.slug}/projects/${\n                      project.slug\n                    }/source-maps/${encodeURIComponent(name)}`}\n                  >\n                    <Version version={name} anchor={false} tooltipRawVersion truncate />\n                  </Link>\n                </TextOverflow>\n              </Column>\n              <ArtifactsColumn>\n                <Count value={fileCount} />\n              </ArtifactsColumn>\n              <Column>\n                <DateTime date={date} timeZone />\n              </Column>\n              <ActionsColumn>\n                <Access access={['project:releases']}>\n                  {({hasAccess}) => (\n                    <Tooltip\n                      disabled={hasAccess}\n                      title={t('You do not have permission to delete artifacts.')}\n                    >\n                      <Confirm\n                        onConfirm={() => handleDelete(name)}\n                        message={t(\n                          'Are you sure you want to remove all artifacts in this archive?'\n                        )}\n                        disabled={!hasAccess}\n                      >\n                        <Button\n                          size=\"sm\"\n                          icon={<IconDelete size=\"sm\" />}\n                          title={t('Remove All Artifacts')}\n                          aria-label={t('Remove All Artifacts')}\n                          disabled={!hasAccess}\n                        />\n                      </Confirm>\n                    </Tooltip>\n                  )}\n                </Access>\n              </ActionsColumn>\n            </Fragment>\n          );\n        })}\n      </StyledPanelTable>\n      <Pagination pageLinks={pageLinks} />\n    </Fragment>\n  );\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns:\n    minmax(120px, 1fr) minmax(120px, max-content) minmax(242px, max-content)\n    minmax(74px, max-content);\n\n  > * {\n    :nth-child(-n + 4) {\n      :nth-child(4n-1) {\n        cursor: pointer;\n      }\n    }\n  }\n`;\n\nconst SearchBarWithMarginBottom = styled(SearchBar)`\n  margin-bottom: ${space(3)};\n`;\n\nconst ArtifactsColumn = styled('div')`\n  text-align: right;\n  justify-content: flex-end;\n`;\n\nconst DateUploadedColumn = styled('div')`\n  display: flex;\n  align-items: center;\n  gap: ${space(0.5)};\n`;\n\nconst Column = styled('div')`\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n`;\n\nconst ActionsColumn = styled(Column)`\n  justify-content: flex-end;\n`;\n","import {RouteComponentProps} from 'react-router';\n\nimport {Project} from 'sentry/types';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport ProjectSourceMapsList from 'sentry/views/settings/projectSourceMaps/list';\nimport {ProjectSourceMaps} from 'sentry/views/settings/projectSourceMaps/projectSourceMaps';\n\ntype Props = RouteComponentProps<{projectId: string}, {}> & {\n  children: React.ReactNode;\n  project: Project;\n};\n\nexport function ProjectSourceMapsContainer(props: Props) {\n  const organization = useOrganization();\n\n  const sourceMapsDebugIds = organization.features.includes('source-maps-debug-ids');\n\n  if (sourceMapsDebugIds) {\n    return <ProjectSourceMaps {...props} />;\n  }\n\n  return <ProjectSourceMapsList {...props} organization={organization} />;\n}\n"],"names":["ListLink","_ref","children","className","isActive","query","to","activeClassName","index","disabled","props","router","useRouter","queryData","qs","undefined","targetLocation","pathname","target","normalizeUrl","active","_jsx","StyledLi","classNames","RouterLink","onlyActiveOnIndex","displayName","_styled","shouldForwardProp","prop","p","theme","SearchBar","queryProp","defaultQuery","onChange","onSearch","width","size","trailing","inputProps","inputRef","useRef","setQuery","useState","useEffect","onQueryChange","useCallback","e","value","onSubmit","preventDefault","current","blur","clearSearch","FormWrap","_jsxs","InputGroup","disablePointerEvents","IconSearch","color","StyledInput","ref","type","name","autoComplete","SearchBarTrailingButton","borderless","onClick","icon","IconClose","t","styles","Button","subText","space","routeName","orgSlug","withSentry","arguments","length","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","SentryDocumentTitle","title","this","renderComponent","SourceMapsArchiveRow","archive","orgId","projectId","onDelete","date","fileCount","archiveLink","encodeURIComponent","Fragment","Column","TextOverflow","Link","Version","version","anchor","tooltipRawVersion","truncate","ArtifactsColumn","Count","DateTime","ActionsColumn","ButtonBar","gap","Access","access","_ref2","hasAccess","Tooltip","Confirm","onConfirm","message","IconDelete","ProjectSourceMaps","constructor","_defineProperty","location","push","cursor","async","addLoadingMessage","api","requestPromise","getArchivesUrl","method","fetchData","addSuccessMessage","addErrorMessage","params","routeTitleGen","getDefaultState","super","archives","getEndpoints","getQuery","organization","project","slug","decodeScalar","getEmptyMessage","renderLoading","renderBody","renderArchives","state","map","a","handleDelete","loading","archivesPageLinks","SettingsPageHeader","action","placeholder","handleSearch","TextBlock","tct","link","ExternalLink","href","StyledPanelTable","headers","emptyMessage","isEmpty","isLoading","Pagination","pageLinks","PanelTable","SORT_BY","routes","useApi","useOrganization","baseUrl","recreateRoute","stepBack","tabDebugIdBundlesActive","endsWith","sortBy","sort","DESC","sourceMapsEndpoint","debugIdBundlesEndpoint","data","archivesData","archivesLoading","refetch","archivesRefetch","useQuery","orderby","includeAllArgs","staleTime","keepPreviousData","enabled","debugIdBundlesData","debugIdBundlesLoading","debugIdBundlesRefetch","getResponseHeader","newQuery","handleSortChange","ASC","NavTabs","underlined","SearchBarWithMarginBottom","DateUploadedColumn","containerDisplayMode","IconArrow","direction","tabName","timeZone","_ref3","ProjectSourceMapsContainer","features","includes","ProjectSourceMapsList"],"sourceRoot":""}