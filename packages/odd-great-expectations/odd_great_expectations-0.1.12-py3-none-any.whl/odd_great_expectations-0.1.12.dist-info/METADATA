Metadata-Version: 2.1
Name: odd-great-expectations
Version: 0.1.12
Summary: OpenDataDiscovery Action for Great Expectations
License: Apache-2.0
Keywords: Open Data Discovery,Great Expectations,Metadata,Data Discovery,Data Observability
Author: Pavel Makarichev
Author-email: vixtir90@gmail.com
Requires-Python: >=3.9,<4.0
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: funcy (>=1.17,<2.0)
Requires-Dist: great-expectations (>=0.15.44,<0.16.0)
Requires-Dist: loguru (>=0.6.0,<0.7.0)
Requires-Dist: odd-models (==2.0.17)
Requires-Dist: oddrn-generator (>=0.1.68,<0.2.0)
Requires-Dist: psycopg2 (>=2.9.5,<3.0.0)
Requires-Dist: sqlalchemy (>=1.4.46,<2.0.0)
Description-Content-Type: text/markdown

## OpenDataDiscovery Great Expectations metadata collecting.
[![PyPI version](https://badge.fury.io/py/odd-great-expectations.svg)](https://badge.fury.io/py/odd-great-expectations)

## Supporting
| Feature                     | Supporting |
| --------------------------- | ---------- |
| V3 API +                    | +          |
| SqlAlchemyEngine            | +          |
| PandasEngine                | +          |
| Great Expectations V2 API - | -          |
| Cloud Solution              | -          |


`odd_great_expectation.action.ODDAction`
Is a class derived from `ValidationAction` and can be used in checkpoint actions lists.

## How to:

### Install odd-great-expectations package
```bash
pip install odd-great-expectations
```

### Add action to checkpoint:
```yaml
name: <CHECKPOINT_NAME>
config_version: 1.0
template_name:
module_name: great_expectations.checkpoint
class_name: Checkpoint
run_name_template: '%Y%m%d-%H%M%S-my-run-name-template'
expectation_suite_name:
batch_request: {}
action_list:
  # other actions
  - name: store_metadata_to_odd 
    action:
      module_name: odd_great_expectations.action
      class_name: ODDAction
      platform_host: <PLATFORM_HOST> # OpenDataDiscovery platform, i.e. http://localhost:8080
      platform_token: <PLATFORM_TOKEN> # OpenDataDiscovery token
      data_source_name: <DATA_SOURCE_NAME> # Unique name for data source, i.e. local_qa_test
evaluation_parameters: {}
```

### Run checkpoint
```bash
great_expectations checkpoint run <CHECKPOINT_NAME> 
```
### Check result
Check results on <PLATFORM_HOST> UI.



