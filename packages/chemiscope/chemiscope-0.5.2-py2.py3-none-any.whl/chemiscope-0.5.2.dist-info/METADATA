Metadata-Version: 2.1
Name: chemiscope
Version: 0.5.2
Summary: Helpers to work with the chemiscope interactive structure/property explorer for materials and molecules
Home-page: https://chemiscope.org
Author: Guillaume Fraux
Author-email: guillaume.fraux@epfl.ch
License: BSD-3-Clause
Project-URL: Bug Tracker, https://github.com/lab-cosmo/chemiscope/issues/
Keywords: visualization materials science chemistry
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Chemistry
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Scientific/Engineering :: Visualization
Description-Content-Type: text/markdown
Requires-Dist: numpy
Requires-Dist: ipywidgets (<9,>=7)

# Python helpers for chemiscope

This package contains Python code to help generate input files for the
[chemiscope](https://chemiscope.org) default visualizer, and integrate
chemiscope with jupyter notebooks.

## Installation

You should use pip to install this package:

```bash
pip install chemiscope
```

This installs both a `chemiscope-input` command line tool, and the `chemiscope`
package.

## Usage

To create a new chemiscope input file:

```python
import chemiscope
import ase.io

# read frames using ase
frames = ase.io.read("structures.xyz", ":")

# add additional properties to display
properties = {
    "<property name>": {
        target: "atom",
        values: [3, 4, 2, 8, 9, 10],
    }
}

chemiscope.write_input("my-input.json.gz", frames=frames, properties=properties)
```

To display a chemiscope widget inside a jupyter notebook:

```python
import chemiscope
import ase.io

# read frames using ase
frames = ase.io.read("structures.xyz", ":")

# add additional properties to display
properties = {
    "<property name>": [3, 4, 2, 8, 9, 10],
}

chemiscope.show(frames=frames, properties=properties)
```
