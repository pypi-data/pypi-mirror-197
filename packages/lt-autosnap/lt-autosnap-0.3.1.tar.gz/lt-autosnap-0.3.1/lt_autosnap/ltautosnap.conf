# Configuration file for ltautosnap

# ##
# Volumes
# ##
# Each volume for which to manage snapshots should be in a section [vol0],
# [vol1], etc. The actual numbers don't matter so long as they are unique.
# ltautosnap uses the value to select which volume to work on.
#
# A volume section has the following values:
# lv
#   LVM path to the LV, i.e. <vg_name>/<lv_name>
# snap_mount_options
#   Options to add to the mount command for snapshots. For example, xfs
#   snapshots need to be mounted with nouuid to prevent conflicts. These should
#   be as in /etc/fstab -- comma-separated with no spaces
# snap_sets
#   Comma-separated keys of snap sets to create for this volume. See below for
#   snap set definition.
# max_metadata_pct
#   If the thinpool's metadata percentage grows beyond this size, an error
#   message will be emitted and no further operations will occur on that
#   volume. (Running out of metadata space basically breaks your volume and is
#   very bad.)
# snap_mount_base
#   Optional path to use as the base for mounting snapshots. If missing or
#   empty, defaults to the mount path of the volume. If "NOMOUNT", snapshots are
#   not automatically mounted at all, and an error will appear if manual
#   mounting is attempted. Note that even if this is changed, existing
#   mounted snapshots may still be managed with this tool.
#   If this directory does not exist, an error will be raised and ltautosnap
#   will exit.
# warning_pct
#   Optional. When running check command emit a warning if the pool is this
#   full or more. If not provided, the check command will error.
# ##

## EXAMPLE VOLUME

[vol0]
lv = testvg/testlv
snap_mount_options = ro,nouuid
snap_sets = 0, 1
max_metadata_pct = 90.0
# snap_mount_base = /mnt/testlv-snaps
# snap_mount_base = NOMOUNT
warning_pct = 90

# ##
# Snap Sets
# ##
# Each snap set definition should be in a section [set1], [set5], etc. The
# actual number may be arbitrary so long as they are unique integers. They are
# used with the snap_sets field of each volume to determine the
#
# A snap set section has the following values:
# unit
#   Unit for 'period'. Acceptable values are minutes, hours, days, and weeks
# period
#   Time between successive snapshots
# count
#   Max number in this set to keep
#
# Note that the actual snapshot management should be managed using [a] cron
# job[s]. autosnap will just check if the latest snapshot in the set is at
# least <period> <units> old and create a new one if so. It will then ensure
# that there are no more than <count> snapshots in the set and delete the oldest
# ones.
# ##

## EXAMPLE SNAP SETS

[set0]
unit = minutes
period = 30
count = 2

[set1]
unit = days
period = 0.5
count = 2

# [set2]
# unit = days
# period = 30
# count = 1
