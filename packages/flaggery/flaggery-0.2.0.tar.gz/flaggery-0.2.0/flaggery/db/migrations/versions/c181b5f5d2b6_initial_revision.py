"""initial revision

Revision ID: c181b5f5d2b6
Revises: 
Create Date: 2023-03-12 15:02:56.130836

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c181b5f5d2b6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('abtests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('end', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('buckets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('features',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('default_variant_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('variants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.Column('disable', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['feature_id'], ['features.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('feature_id', 'name', name='_feature_variant_unique'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('id', 'feature_id', name='_feature_variant_unique_ids')
    )
    op.create_foreign_key(
        'fk_feature_default_variant',
        'features', 'variants',
        ['default_variant_id'], ['id']
    )
    op.create_foreign_key(
        'fk_feature_default_variant_belongs',
        'features', 'variants',
        ['id', 'default_variant_id'], ['feature_id', 'id']
    )
    op.create_table('abtest_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('proportion', sa.Float(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['abtests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('id', 'test_id', name='_test_group_unique_ids'),
    sa.UniqueConstraint('test_id', 'name', name='_group_name_in_test_unique')
    )
    op.create_table('group_overrides',
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('feature_id', sa.Integer(), nullable=True),
    sa.Column('variant_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['feature_id', 'variant_id'], ['variants.feature_id', 'variants.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.UniqueConstraint('group_id', 'feature_id', name='_group_override_feature_unique')
    )
    op.create_table('rollouts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.Column('proportion', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['feature_id', 'variant_id'], ['variants.feature_id', 'variants.id'], ),
    sa.ForeignKeyConstraint(['feature_id'], ['features.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('feature_id'),
    sa.UniqueConstraint('feature_id', name='_only_one_rollout_per_feature'),
    sa.UniqueConstraint('id')
    )
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Integer(), nullable=False),
    sa.Column('bucket_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bucket_id'], ['buckets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('abtest_group_overrides',
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['feature_id', 'variant_id'], ['variants.feature_id', 'variants.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['abtest_groups.id'], ),
    sa.UniqueConstraint('group_id', 'feature_id', name='_test_group_unique_feature_override')
    )
    op.create_table('bucket_rollouts',
    sa.Column('bucket_id', sa.Integer(), nullable=True),
    sa.Column('rollout_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bucket_id'], ['buckets.id'], ),
    sa.ForeignKeyConstraint(['rollout_id'], ['rollouts.id'], )
    )
    op.create_table('bucket_tests',
    sa.Column('bucket_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bucket_id'], ['buckets.id'], ),
    sa.ForeignKeyConstraint(['group_id', 'test_id'], ['abtest_groups.id', 'abtest_groups.test_id'], ),
    sa.UniqueConstraint('bucket_id', 'test_id', name='_bucket_has_only_one_group_in_each_test')
    )
    op.create_table('subject_groups',
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subject_groups')
    op.drop_table('bucket_tests')
    op.drop_table('bucket_rollouts')
    op.drop_table('abtest_group_overrides')
    op.drop_table('subjects')
    op.drop_table('rollouts')
    op.drop_table('group_overrides')
    op.drop_table('abtest_groups')
    op.drop_table('variants')
    op.drop_table('groups')
    op.drop_table('features')
    op.drop_table('buckets')
    op.drop_table('abtests')
    # ### end Alembic commands ###
