[tool.poetry]
name = "landfire"
version = "0.5.0"
description = "Landfire"
authors = ["FireSci <support@firesci.io>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/FireSci/landfire-python"
repository = "https://github.com/FireSci/landfire-python"
documentation = "https://landfire-python.firesci.io"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Typing :: Typed",
]
[tool.poetry.urls]
Changelog = "https://github.com/FireSci/landfire-python/releases"

[tool.poetry.dependencies]
python = ">=3.8, <3.12"
attrs = ">=22.2.0"
pydantic = ">=1.10"
requests = ">=2.28.0"
geojson = { version = ">=3.0.0", optional = true }
geopandas = { version = ">=0.12.0", optional = true }
fiona = { version = ">=1.9.0", optional = true }
tqdm = "^4.65.0"

[tool.poetry.dev-dependencies]
Pygments = ">=2.10.0"
black = ">=21.10b0"
coverage = { extras = ["toml"], version = ">=6.2" }
darglint = ">=1.8.1"
flake8 = ">=4.0.1"
flake8-bandit = ">=2.1.2"
flake8-bugbear = ">=21.9.2"
flake8-docstrings = ">=1.6.0"
flake8-rst-docstrings = ">=0.2.5"
furo = ">=2021.11.12"
isort = ">=5.10.1"
mypy = ">=0.930"
nox = "^2022.11.21"
nox-poetry = "^1.0.2"
pep8-naming = ">=0.12.1"
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.1.0"
pytest = ">=6.2.5"
pyupgrade = ">=2.29.1"
safety = ">=1.10.3"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
typeguard = ">=2.13.3"
xdoctest = { extras = ["colors"], version = ">=0.15.10" }
myst-parser = { version = ">=0.16.1" }
types-requests = "^2.28.11.15"
pandas-stubs = "^1.5.3.230304"
sphinx-copybutton = "^0.5.1"
enum-tools = { extras = ["sphinx"], version = "^0.9.0.post1" }

[tool.poetry.extras]
# If developing this package, use `poetry install -E geospatial`
# If using this package, try `poetry add "landfire[geospatial]"`
geospatial = ["fiona", "geopandas", "geojson"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["landfire"]

[tool.coverage.report]
show_missing = true
fail_under = 92

[tool.isort]
profile = "black"
force_single_line = false
lines_after_imports = 2

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
