
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/plot_wall_env.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_plot_wall_env.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_wall_env.py:


================
Wall Environment
================

This example shows how to use the Wall Environment.

.. GENERATED FROM PYTHON SOURCE LINES 13-14

Import required packages

.. GENERATED FROM PYTHON SOURCE LINES 14-59

.. code-block:: default


    import matplotlib.pyplot as plt

    from rlenv.envs.wall.core import AccentaEnv
    from rlenv.sed.wall import Wall
    #from rlenv.weather.generator.toysine import gen_bogus_weather_time_series as weather_generator
    from rlenv.weather.generator.brownianbridge import gen_weather_time_series_with_brownian_bridge as weather_generator
    from rlenv.weather.forecast.bogus import gen_weather_forecast as weather_forecast_generator

    thermal_needs_generator = Wall(setpoint_degree=18.)

    env = AccentaEnv(weather_generator=weather_generator,
                     weather_forecast_generator=weather_forecast_generator,
                     thermal_needs_generator=thermal_needs_generator,
                     record_logs=True,
                     state_contains_daily_time_indicator=False,
                     state_contains_weekly_time_indicator=False,
                     state_contains_yearly_time_indicator=True)
    env.reset()

    stop = False
    s = env.reset()

    while not stop:
        a = env.action_space.sample()

        s.shape == env.observation_space.shape
        a.shape == env.action_space.shape

        s, reward, stop, _ = env.step(a)

    # MAKE THE RESULT DATAFRAME
    df = env.logs_to_df()

    # PLOT

    df.loc[:,['a1_th', 'a2_th', 'a3', 'e', 'current_thermal_needs_kwh', 'cop']].plot(figsize=(30,8), alpha=0.5)
    #df.loc[:,['s3', 's4']].plot(figsize=(30,8), alpha=0.5)
    #df.loc[:,['s3', 's4', 's5', 's6']].plot(figsize=(30,8), alpha=0.5)
    #df.loc[:,['s3', 's4', 's5', 's6', 's7', 's8']].plot(figsize=(30,8), alpha=0.5)
    #df.loc[:24,['s3', 's4', 's5', 's6', 's7', 's8']].plot(figsize=(30,8), alpha=0.5)
    plt.tight_layout()
    plt.show()

    print(env.observation_space.low)
    print(env.observation_space.high)


.. image-sg:: /gallery/images/sphx_glr_plot_wall_env_001.png
   :alt: plot wall env
   :srcset: /gallery/images/sphx_glr_plot_wall_env_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/jeremie/git/accenta/recherche/ens-data-challenge-2022-2023/accenta-gym-environment/env/lib/python3.8/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
      logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
    [-40.   0.   0.  -1.  -1. -40. -40. -40. -40. -40. -40.]
    [  50. 1000.  500.    1.    1.   50.   50.   50.   50.   50.   50.]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.511 seconds)


.. _sphx_glr_download_gallery_plot_wall_env.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_wall_env.py <plot_wall_env.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_wall_env.ipynb <plot_wall_env.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
