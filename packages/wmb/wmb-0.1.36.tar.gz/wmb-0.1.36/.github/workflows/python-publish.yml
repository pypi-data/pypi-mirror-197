# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    # build python package and deploy to pypi
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN_ALL_PROJECT }}

    # build docker image and push to GCR
    # - uses: actions/checkout@v3
    # - uses: google-github-actions/setup-gcloud@v0
    # - name: Get the version
    #   id: get_tag_name
    #   run: echo ::set-output name=GIT_TAG_NAME::${GITHUB_REF/refs\/tags\//}
    # - uses: RafikFarhad/push-to-gcr-github-action@v4
    #   with:
    #     gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
    #     registry: gcr.io
    #     project_id: prod-635e
    #     image_name: wmb
    #     image_tag: ${{ steps.get_tag_name.outputs.GIT_TAG_NAME}},latest
    #     dockerfile: ./Dockerfile