Metadata-Version: 2.1
Name: meetingscribe
Version: 0.1.1
Summary: MeetingScribe is an AI-driven command-line tool designed to streamline your meeting experience by handling transcription, translation, and note-taking. Effortlessly generate accurate translation/transcription in English from audio file. Additionally, the tool intelligently creates meeting notes, summaries, and identifies action items.
Home-page: https://github.com/0x77dev/meetingscribe
License: MIT
Author: Mykhailo Marynenko
Author-email: mykhailo@0x77.dev
Requires-Python: >=3.9,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.9
Requires-Dist: aiohttp[all] (>=3.8.4,<4.0.0)
Requires-Dist: cchardet[all] (>=2.1.7,<3.0.0)
Requires-Dist: openai[all] (>=0.27.2,<0.28.0)
Requires-Dist: pydub[all] (>=0.25.1,<0.26.0)
Requires-Dist: pysrt[all] (>=1.1.2,<2.0.0)
Requires-Dist: rich (==10.11.0)
Requires-Dist: srt[all] (>=3.5.2,<4.0.0)
Requires-Dist: typer[all] (>=0.7.0,<0.8.0)
Description-Content-Type: text/markdown

# MeetingScribe

AI-driven command-line tool designed to streamline your meeting experience by handling transcription, translation, and note-taking. Effortlessly generate accurate translation/transcription in English from audio file. Additionally, the tool intelligently creates meeting notes, summaries, and identifies action items.

Powered by OpenAI's GPT-3 and Whisper API

**Prerequisites**:

1. Specify [OpenAI API Key](https://platform.openai.com/account/api-keys):

```console
export OPENAI_API_KEY=<your-openai-api-key>
```

2. Install [FFmpeg](https://ffmpeg.org/download.html)

**Installation**:

<details>

<summary>
using <code>pip</code>
</summary>

```console
export OPENAI_API_KEY=<your-openai-api-key>

docker run -it -e OPENAI_API_KEY=$OPENAI_API_KEY ghcr.io/0x77dev/meetingscribe --help
```

</details>

<details>

<summary>
using <code>docker</code>
</summary>

```console
export OPENAI_API_KEY=<your-openai-api-key>

docker run -it -e OPENAI_API_KEY=$OPENAI_API_KEY ghcr.io/0x77dev/meetingscribe --help
```

</details>

**Usage**:

```console
meeting [OPTIONS] COMMAND [ARGS]...
```

**Options**:

- `--install-completion`: Install completion for the current shell.
- `--show-completion`: Show completion for the current shell, to copy it or customize the installation.
- `--help`: Show this message and exit.

**Commands**:

- `process`: Transcribe (and optionally translate to English) audio file into SRT file
- `srt2txt`: Transform SRT file to TXT file
- `summarize`: Generate meeting summary, notes, and action items from SRT file

## `meeting process`

Transcribe (and optionally translate) audio file into SRT file
Translation will translate from source language to English

**Usage**:

```console
meeting process [OPTIONS] INPUT_AUDIO_FILE
```

**Arguments**:

- `INPUT_AUDIO_FILE`: [required]

**Options**:

- `--output-srt-file TEXT`: [default: output.srt]
- `--source-language TEXT`
- `--segment-length INTEGER`: [default: 600000]
- `--help`: Show this message and exit.

## `meeting srt2txt`

Transform SRT file to TXT file

**Usage**:

```console
meeting srt2txt [OPTIONS]
```

**Options**:

- `--srt-file TEXT`: [default: output.srt]
- `--output-file TEXT`: [default: output.txt]
- `--help`: Show this message and exit.

## `meeting summarize`

Generate meeting summary, notes, and action items from SRT file

**Usage**:

```console
meeting summarize [OPTIONS]
```

**Options**:

- `--input-srt-file TEXT`: [default: output.srt]
- `--output-summary-file TEXT`: [default: output.md]
- `--help`: Show this message and exit.

