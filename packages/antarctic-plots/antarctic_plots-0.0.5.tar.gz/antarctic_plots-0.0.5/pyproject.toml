[build-system]
requires = ["setuptools>=61.0", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "antarctic_plots"
dynamic = ["version"]
description = "Functions to automate Antarctic data visualization"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Matthew Tankersley", email = "matt.d.tankersley@gmail.com"},
]
keywords = ["antarctica", "maps", "plotting", "pygmt", "cross-section"]

dependencies = [
    "pandas[excel]", # includes openpyxl and others
    "pooch[progress]", # includes tqdm
    "verde",
    "xarray[io]", # includes netCDF4, h5netcdf, scipy, pydap, zarr, fsspec, cftime, rasterio, cfgrib, pooch
    "pyproj",
    "matplotlib",
    "pyogrio",
    "rioxarray",
    "scipy",
    "numpy",
    "pygmt",
    "geopandas",
    "zarr",
    "python-dotenv",
    "pip",
]

[project.optional-dependencies]
interactive = [
    "geoviews",
    "cartopy",
    "ipyleaflet",
]
viz = [
    "seaborn",
]

dev = [
    "pytest",
    "pytest-cov",
    "flake8",
    "isort",
    "Flake8-pyproject",
    "black[jupyter]", # includes ipython, tokenize-rt
    "nbsphinx",
    "sphinx-gallery",
    "jupyter-book",
    "nbconvert",
]

[project.urls]
homepage = "https://antarctic-plots.readthedocs.io/en/latest/installation.html"
repository = "https://github.com/mdtanker/antarctic_plots"
documentation = "https://antarctic-plots.readthedocs.io/en/latest/api.html"

[tool.setuptools]
packages = ["antarctic_plots"]

[tool.setuptools.dynamic]
version = {attr = "antarctic_plots.__version__"}

#[tool.setuptools_scm]
#write_to = "antarctic_plots/_version.py"
#version_scheme= "post-release"

[tool.flake8]
max-line-length = 88

[tool.coverage.run]
branch = true
omit = [
    "*/tests/*",
    "**/__init__.py"
    ]

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "earthdata: marks tests as requiring earthdata login info (deselect with '-m \"not earthdata\"')",
    "issue: mark tests with current issues (deselect with '-m \"not issues\"')",
    "working: marks tests which are working",
]