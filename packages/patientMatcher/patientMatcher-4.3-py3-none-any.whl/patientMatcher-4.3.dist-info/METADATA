Metadata-Version: 2.1
Name: patientMatcher
Version: 4.3
Summary: A python and MongoDB-based Matchmaker Exchange server
Home-page: https://github.com/Clinical-Genomics/patientMatcher
Author: Chiara Rasi
Author-email: chiara.rasi@scilifelab.se
License: MIT
Download-URL: https://github.com/Clinical-Genomics/patientMatcher/tarball/4.3
Keywords: matchmaker exchange,genes,matchmaker,rare diseases,genomics,genotype,phenotype,patients,genetic disease
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Intended Audience :: Science/Research
Classifier: Operating System :: MacOS
Classifier: Operating System :: Unix
Description-Content-Type: text/markdown
Requires-Dist: coloredlogs
Requires-Dist: Flask
Requires-Dist: Flask-Mail
Requires-Dist: flask-negotiate
Requires-Dist: requests
Requires-Dist: responses
Requires-Dist: jsonschema
Requires-Dist: pymongo (<4.0)
Requires-Dist: enlighten
Requires-Dist: clint


# patientMatcher - a Python and MongoDB - based MatchMaker Exchange server
[![Build Status](https://travis-ci.com/Clinical-Genomics/patientMatcher.svg?branch=master)](https://travis-ci.com/Clinical-Genomics/patientMatcher) [![codecov](https://codecov.io/gh/Clinical-Genomics/patientMatcher/branch/master/graph/badge.svg?token=WXHDu9U8qk)](https://codecov.io/gh/Clinical-Genomics/patientMatcher)
[![DOI](https://zenodo.org/badge/DOI/10.1002/humu.24358.svg)](https://doi.org/10.1002/humu.24358)


PatientMatcher is a **Python** (Flask) and **MongoDB** - based implementation of a [MatchMaker Exchange](https://www.matchmakerexchange.org/) (MME) server, developed and actively maintained by [Clinical Genomics, Science For Life Laboratory in Stockholm](https://www.scilifelab.se/units/clinical-genomics-stockholm/). PatientMatcher is designed as a standalone application, but can easily communicate with external applications via REST API. The MME Stockholm node is being implemented in clinical production in collaboration with the Genomic Medicine Center Karolinska at the Karolinska University Hospital.    

Info on how to test PatientMatcher or to set up a server containing an app frontend and backend is available on the [documentation pages](https://clinical-genomics.github.io/patientMatcher).




[travis-url]: https://travis-ci.org/Clinical-Genomics/patientMatcher
[travis-image]: https://img.shields.io/travis/Clinical-Genomics/patientMatcher.svg?style=flat-square


